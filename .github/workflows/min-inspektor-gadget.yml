name: Min Inspektor Gadget CI
env:
  REGISTRY: ghcr.io
  CONTAINER_REPO: ${{ github.repository }}
  GO_VERSION: 1.22.8
  # controller-gen with go >1.21 panics, but we can't update controller-gen itself
  GO_VERSION_DOC_CHECK: 1.21.3
  AZURE_AKS_CLUSTER_PREFIX: ig-ci-aks-
  DEFAULT_DNSTESTER_IMAGE: ghcr.io/inspektor-gadget/dnstester:latest
  DEFAULT_EBPF_BUILDER_IMAGE: ghcr.io/inspektor-gadget/ebpf-builder:latest
  # With the recent update of docker/build-push-action to v6, this action
  # started creating docker build summary files (i.e. .dockerbuild).
  # Sadly, these files create troubles when trying to download artifact in the
  # release job as they seem to not be downloadable.
  # So, for now, let's deactivate this feature.
  DOCKER_BUILD_NO_SUMMARY: true
concurrency:
  group: ${{ github.ref }}
  # We do not want to cancel job in progress on main to be sure to catch new
  # regression as soon as they are introduced.
  cancel-in-progress: ${{ github.ref_name != 'main' }}
on:
  pull_request:
  push:
    branches:
    - main
    - 'release-*'
    - 'citest/**'
    tags:
    - 'v*'

permissions: read-all

# Jobs are given a level in a comment.
# Jobs of the same level run in parallel.
# Jobs of level N depend of, at least, one job on level N - 1 expect job whom
# level is 0.
jobs:
  check-secrets:
    name: Check repo secrets
    # level: 0
    runs-on: ubuntu-latest
    outputs:
      aro: ${{ steps.set_output.outputs.aro }}
      aks: ${{ steps.set_output.outputs.aks }}
      gke: ${{ steps.set_output.outputs.gke }}
      cosign: ${{ steps.set_output.outputs.cosign }}
    steps:
      # Secrets cannot be used as if condition, use job output as workaround.
      # https://github.com/actions/runner/issues/520
      - id: set_output
        env:
          OPENSHIFT_SERVER: '${{ secrets.OPENSHIFT_SERVER }}'
          OPENSHIFT_USER: '${{ secrets.OPENSHIFT_USER }}'
          OPENSHIFT_PASSWORD: '${{ secrets.OPENSHIFT_PASSWORD }}'
          AZURE_AKS_CLIENT_ID: '${{ secrets.AZURE_AKS_CLIENT_ID }}'
          AZURE_AKS_TENANT_ID: '${{ secrets.AZURE_AKS_TENANT_ID }}'
          AZURE_AKS_SUBSCRIPTION_ID: '${{ secrets.AZURE_AKS_SUBSCRIPTION_ID }}'
          AZURE_AKS_RESOURCE_GROUP: '${{ secrets.AZURE_AKS_RESOURCE_GROUP }}'
          COSIGN_PASSWORD: '${{ secrets.COSIGN_PASSWORD }}'
          COSIGN_PRIVATE_KEY: '${{ secrets.COSIGN_PRIVATE_KEY }}'
          GKE_PROJECT: '${{ secrets.GKE_PROJECT }}'
          GKE_SERVICE_ACCOUNT: '${{ secrets.GKE_SERVICE_ACCOUNT }}'
          GKE_WORKLOAD_IDENTITY_PROVIDER: '${{ secrets.GKE_WORKLOAD_IDENTITY_PROVIDER }}'
        run: |
          if [[ "${OPENSHIFT_SERVER}" != "" && \
                "${OPENSHIFT_USER}" != "" && \
                "${OPENSHIFT_PASSWORD}" != "" ]]; \
          then
            echo "Secrets to use an ARO cluster were configured in the repo"
            echo "aro=true" >> $GITHUB_OUTPUT
          else
            echo "Secrets to use an ARO cluster were not configured in the repo"
            echo "aro=false" >> $GITHUB_OUTPUT
          fi

          if [[ "${AZURE_AKS_CLIENT_ID}" != "" && \
                "${AZURE_AKS_TENANT_ID}" != "" && \
                "${AZURE_AKS_SUBSCRIPTION_ID}" != "" && \
                "${AZURE_AKS_RESOURCE_GROUP}" != "" ]]; \
          then
            echo "Secrets to use an AKS cluster were configured in the repo"
            echo "aks=true" >> $GITHUB_OUTPUT
          else
            echo "Secrets to use an AKS cluster were not configured in the repo"
            echo "aks=false" >> $GITHUB_OUTPUT
          fi

          if [[ "${COSIGN_PASSWORD}" != "" && \
                "${COSIGN_PRIVATE_KEY}" != "" ]]; \
          then
            echo "Secrets to use cosign were configured in the repo"
            echo "cosign=true" >> $GITHUB_OUTPUT
          else
            echo "Secrets to use cosign were not configured in the repo"
            echo "cosign=false" >> $GITHUB_OUTPUT
          fi

          if [[ "${GKE_PROJECT}" != "" && \
                "${GKE_SERVICE_ACCOUNT}" != "" && \
                "${GKE_WORKLOAD_IDENTITY_PROVIDER}" != "" ]]; \
          then
            echo "Secrets to use a GKE cluster were configured in the repo"
            echo "gke=true" >> $GITHUB_OUTPUT
          else
            echo "Secrets to use a GKE cluster were not configured in the repo"
            echo "gke=false" >> $GITHUB_OUTPUT
          fi

  gadgets-unittest:
    name: Gadgets unit tests
    needs:
      - check-secrets
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set container repository and determine image tag
        id: set-repo-determine-image-tag
        uses: ./.github/actions/set-container-repo-and-determine-image-tag
        with:
          registry: ${{ env.REGISTRY }}
          container-image: ${{ env.CONTAINER_REPO }}
      - name: Setup go
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
        id: go
      - name: Gadgets tests
        id: gadgets-tests
        shell: bash
        run: |
            set -o pipefail
            make \
            GADGET_REPOSITORY=${{ steps.set-repo-determine-image-tag.outputs.gadget-repository }} \
            GADGET_TAG=${{ steps.set-repo-determine-image-tag.outputs.gadget-tag }} \
            IG_VERIFY_IMAGE=${{ needs.check-secrets.outputs.cosign }} \
            -C gadgets/ test-unit -o build |& tee gadgets-tests.log & wait $!
